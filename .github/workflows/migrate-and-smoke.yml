name: Migrate and Smoke

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  migrate-and-smoke:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: edurebel-app

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      ADMIN_BEARER_TOKEN: ${{ secrets.ADMIN_BEARER_TOKEN }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      PORT: 3000
      BASE_URL: http://localhost:3000

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: edurebel-app/package-lock.json

      - name: Install deps
        run: npm ci

      # --- Install Supabase CLI without touching cli.supabase.com ---
      - name: Install Supabase CLI (action)
        id: supa
        continue-on-error: true
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install Supabase CLI (GitHub Releases fallback)
        if: steps.supa.outcome != 'success'
        run: |
          set -euo pipefail
          curl -L https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64 -o supabase
          sudo install -m 0755 supabase /usr/local/bin/supabase
          supabase --version

      # --- Push migrations using DB URL (no supabase link/config.toml needed) ---
      - name: Push migrations (via DB URL)
        run: |
          if [ -z "${SUPABASE_DB_URL:-}" ]; then
            echo "❌ SUPABASE_DB_URL secret missing."
            exit 1
          fi
          supabase db push --db-url "$SUPABASE_DB_URL"

      - name: Build
        run: npm run ci:build

      - name: Start app (background)
        run: nohup bash -lc "npm run ci:start" >/tmp/app.log 2>&1 & echo $! > /tmp/app.pid

      - name: Wait for health
        run: ./scripts/wait-on.sh "$BASE_URL/api/health" 90

      - name: Show app log head
        if: always()
        run: head -n 200 /tmp/app.log || true

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run e2e
        run: npm run test:e2e

      - name: Stop app (always)
        if: always()
        run: kill "$(cat /tmp/app.pid)" 2>/dev/null || true
